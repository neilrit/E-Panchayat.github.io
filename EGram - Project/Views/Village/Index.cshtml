@model EGram.Models.Schema

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Schema</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SchemeID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SchemeID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SchemeID, "", new { @class = "text-danger" })
            </div>
        </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SchemaName, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.SchemaName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SchemaName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Village, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Village, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Village, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.ActiveTill, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.ActiveTill, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ActiveTill, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @rows = 10, @cols = 1000 })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    
        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control" }, @rows = 7, @cols = 90 })
            @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
