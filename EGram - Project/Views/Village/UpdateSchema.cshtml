@model EGram.Models.Schema
@{
    ViewBag.Title = "Update Schema";
    Layout = "~/Views/Shared/LayOutNew.cshtml";
}
<div class="row" style="margin-top:2em">
    <div class="col-md-8">
        @using (Html.BeginForm(Html.BeginForm("UpdateSchema", "Village", FormMethod.Post, new
        {
            enctype = "multipart/form-data"
        })))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Updating @Model.SchemaName Schema</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.SchemeID, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SchemeID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SchemeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SchemaName, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.SchemaName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SchemaName, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5">
                    <span style="display:none">@Model.CreatedOn</span>
                    @Html.EditorFor(model => model.CreatedOn, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                </div>

                <span style="display:none">
                    @Model.ActiveTill
                </span>
                @Html.LabelFor(model => model.ActiveTill, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ActiveTill, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActiveTill, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @rows = 10, @cols = 1000 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5">
                    @Html.TextAreaFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control" }, @rows = 7, @cols = 90 })
                    @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    @Html.TextBox("file", "", new { type = "file" })
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })

                </div>
            </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Village, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Village, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Village, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("file", "", new { type = "file" }) <br />
                </div>
            </div>*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />

                        <p style="color:green">@ViewBag.message
                    </div>
                </div>
            </div>
            }
        </div>
    <div class="col-md-3">
        <img src="~/Content/Assets/img/service-details-1.jpg" alt="Nature" class="responsive" width="400" height="400">
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
