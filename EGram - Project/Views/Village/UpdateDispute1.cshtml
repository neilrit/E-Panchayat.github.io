@model EGram.Models.ComplaintModal

@{
    ViewBag.Title = "UpdateComplaint";
    Layout = "~/Views/Shared/LayOutNew.cshtml";
}

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">


@using (Html.BeginForm(Html.BeginForm("UpdateDispute", "Village", FormMethod.Post, new
{
    enctype = "multipart/form-data"
})))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-8">
        <h4>Dear <b>@Model.Raised_By</b>,Your Complaint No. <b>@Model.Complaint_Number</b> is Active. </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group" style="display:none">


            @Html.LabelFor(model => model.Complaint_Number, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.TextAreaFor(model => model.Complaint_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Complaint_Number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10" style="max-width:auto">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Raised_By, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Raised_By, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Raised_By, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.RaisedByUniqueID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.RaisedByUniqueID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RaisedByUniqueID, "", new { @class = "text-danger" })
            </div>


        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AgainstParty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.AgainstParty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AgainstParty, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
            </div>





        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Status, ViewBag.StatusList as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3" style="display:none">
                @Html.EditorFor(model => model.StatusText, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">

                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @row = 5, @cols = 60 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5" id="doc" style="display:none">

            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Reviewbycomitee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Reviewbycomitee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reviewbycomitee, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Meeting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Meeting, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.Meeting, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })

            </div>
            @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBox("file", "", new { type = "file" })
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })

            </div>
        </div>


        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="View Document" onclick="Openpdf()" class="btn btn-default" />
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
            <div id="documentViewer">

            </div>
        </div>
    </div>
    <div class="col-md-4">
        <input type="button" id="myBtn" style="margin-top:1em" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" value="Add Note" />
        <input type="button" id="myBtn" style="margin-top:1em" data-toggle="collapse" data-target="#sendsms" aria-expanded="false" aria-controls="collapseExample" value="Send SMS" />
        <input type="button" id="myBtn" style="margin-top:1em" data-toggle="collapse" data-target="#sendemail" aria-expanded="false" aria-controls="collapseExample" value="Send Email" />

        <div class="collapse" id="collapseExample" style="border:2px solid black">
            <div class="card card-body">
                Discussion Date : @DateTime.Today
                <form>
                    @if (Request.IsAuthenticated)
                    {
                        <input type="text" value="From Admin" name="fromadmin" readonly />
                    }
                    else
                    {
                        <input type="text" value="From Resident" name="fromuser" readonly />
                    }
                    <br />
                    <textarea rows="5" cols="33" name="discussion" placeholder="comments"></textarea>
                    <input type="date" name="date" />
                    <input type="button" value="create Note." />
                </form>
            </div>
        </div>


        <div class="collapse" id="sendsms" style="border:2px solid black">
            <div class="card card-body">
                Discussion Date : @DateTime.Today
                Recepient No: @Model.RaisedByUniqueID
                <form>
                    <textarea rows="4" name="discussion" placeholder="message"></textarea>

                    <input type="button" value="Send SMS." />
                </form>
            </div>
        </div>
        <div class="collapse" id="sendemail" style="border:2px solid black">
            <div class="card card-body">
                Discussion Date : @DateTime.Today
                <form>
                    <textarea rows="4" name="discussion" placeholder="comments"></textarea>
                    <input type="date" name="date" />
                    <input type="button" value="create Note." />
                </form>
            </div>
        </div>

        View Existing Comments

    </div>
}


<div>
    @Html.ActionLink("Back to Home", "Index")
</div>

<div id="id03" class="w3-modal">
    <div class="w3-modal-content w3-animate-top w3-card-4">
        <header class="w3-container w3-teal">
            <span onclick="document.getElementById('id03').style.display='none'"
                  class="w3-button w3-display-topright">&times;</span>
            <h2>Here what attachment is.</h2>
        </header>
        <div class="w3-container">
            <table class="table table-striped table-bordered" id="attachment-data-table" style="width:100%">
                <thead>
                    <tr>
                        <th>Index</th>
                        <th>Name</th>
                        <th>Purpose</th>
                        <th>Download</th>
                    </tr>
                </thead>
            </table>
        </div>
        <footer class="w3-container w3-teal">
            <p>Modal Footer</p>
        </footer>
    </div>
</div>


<div id="id04" class="w3-modal" style="width:50px">
    <div class="w3-modal-content w3-animate-top w3-card-4">
        <header class="w3-container w3-teal">
            <span onclick="document.getElementById('id04').style.display='none'"
                  class="w3-button w3-display-topright">&times;</span>
            <h2>Modal Header</h2>
        </header>
        <div class="w3-container">
            <p>Some text..</p>
            <p>Some text..</p>
        </div>
        <footer class="w3-container w3-teal">
            <p>Modal Footer</p>
        </footer>
    </div>
</div>


<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<!-- #region datatables files -->
<script src="//cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>

<script>

    function Openpdf() {
        document.getElementById('id03').style.display = 'block';
        var customerNo = $('#Complaint_Number').val();

        // $('#doc').html("<iframe src=C:\Users\AMAR\OneDrive\Desktop\GIT Copy\EGram - Project\ImagesInProj\Complaint\718724555\"+ imgurl +"width = '500' height = '500'</iframe > ");
    }

    function oncreatenote() {
        document.getElementById('id04').style.display = 'block'
    }
    $(document).ready(function () {
        Attachment_config();
    });
    function Attachment_config() {
        var recordtype = 'Complaint';
        var recordNo = '1862286913';
        $('#attachment-data-table').DataTable({
            "ajax": {
                "url": "/Village/GetAttachmentConfig?imagetype=" + recordtype + "&number=" + recordNo,
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                {
                    "data": "ID"
                },
                {
                    "data": "ImageName",

                },
                { "data": "Purpose" },

                {
                    "render": function (data, type, row) {
                        return '<input type="button" class="btn btn-info" value="Download" onclick="downloadfile(\''+row.ID+'\')"/>';
                    }
                }

            ]
        })
    }

    function downloadfile(rowid) {
        alert("xyz");
         $.ajax({
          url: '@Url.Action("downloadfile", "Village")',
             data: { id: rowid },
             success: function (data) {
                 var z = JSON.parse(data);
                 debugger;
                 alert(data);
            //call is successfully completed and we got result in data
          },
          error:function (xhr, ajaxOptions, thrownError){
                          //some errror, some show err msg to user and log the error
                          alert(xhr.responseText);

                        }
          });

    }
</script>
<style>

    .form-horizontal .control-label {
        padding-top: 7px;
        margin-bottom: 0;
        text-align: left;
    }

    input, select, textarea {
        max-width: none;
    }
</style>



